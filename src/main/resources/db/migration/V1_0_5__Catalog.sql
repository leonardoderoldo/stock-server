CREATE TABLE CATALOG(
    ID              BIGSERIAL,
    EXTERNAL_ID     VARCHAR(26)     NOT NULL,
    RESTAURANT_ID   BIGINT          NOT NULL,
    NAME            VARCHAR(30)     NOT NULL,
    STATUS          VARCHAR(50)     NOT NULL,
    CREATED_AT      TIMESTAMP       NOT NULL,
    UPDATED_AT      TIMESTAMP       NOT NULL,
    PRIMARY KEY (ID),
    CONSTRAINT FK_CATALOG_RESTAURANT_ID FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT (ID)
);
CREATE UNIQUE INDEX UNIQUE_CATALOG_RESTAURANT_ID ON CATALOG (RESTAURANT_ID) WHERE STATUS = 'ACTIVE';
CREATE INDEX INDEX_CATALOG_RESTAURANT_ID_STATUS ON CATALOG (RESTAURANT_ID, STATUS);


CREATE TABLE CATEGORY(
    ID              BIGSERIAL,
    EXTERNAL_ID     VARCHAR(26)     NOT NULL,
    CATALOG_ID      BIGINT          NOT NULL,
    SEQUENCE        INT             NOT NULL,
    NAME            VARCHAR(30)     NOT NULL,
    TEMPLATE        VARCHAR(10)     NOT NULL,
    STATUS          VARCHAR(50)     NOT NULL,
    CREATED_AT      TIMESTAMP       NOT NULL,
    UPDATED_AT      TIMESTAMP       NOT NULL,
    PRIMARY KEY (ID),
    CONSTRAINT FK_CATEGORY_CATALOG_ID FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID)
);
CREATE UNIQUE INDEX UNIQUE_CATEGORY_CATALOG_ID ON CATEGORY (CATALOG_ID) WHERE STATUS = 'ACTIVE';
CREATE INDEX INDEX_CATEGORY_CATALOG_ID_STATUS ON CATEGORY (CATALOG_ID, STATUS);


CREATE TABLE PRODUCT(
    ID              BIGSERIAL,
    EXTERNAL_ID     VARCHAR(26)     NOT NULL,
    CATEGORY_ID     BIGINT          NOT NULL,
    SEQUENCE        INT             NOT NULL,
    NAME            VARCHAR(30)     NOT NULL,
    DESCRIPTION     TEXT            NOT NULL,
    PRICE           NUMERIC         NOT NULL,
    SERVING         VARCHAR(14)     NOT NULL,
    IMAGE_PATH      VARCHAR(300)    NOT NULL,
    STATUS          VARCHAR(50)     NOT NULL,
    CREATED_AT      TIMESTAMP       NOT NULL,
    UPDATED_AT      TIMESTAMP       NOT NULL,
    PRIMARY KEY (ID),
    CONSTRAINT FK_CATEGORY_CATEGORY_ID FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY (ID)
);
CREATE UNIQUE INDEX UNIQUE_PRODUCT_CATEGORY_ID ON PRODUCT (NAME, CATEGORY_ID) WHERE STATUS = 'ACTIVE';
CREATE INDEX INDEX_PRODUCT_CATEGORY_ID_STATUS ON PRODUCT (CATEGORY_ID, STATUS);


CREATE TABLE OPTION_GROUP(
    ID              BIGSERIAL,
    EXTERNAL_ID     VARCHAR(26)     NOT NULL,
    CATALOG_ID      BIGINT          NOT NULL,
    SEQUENCE        INT             NOT NULL,
    NAME            VARCHAR(30)     NOT NULL,
    MIN             INT,
    MAX             INT,
    STATUS          VARCHAR(50)     NOT NULL,
    CREATED_AT      TIMESTAMP       NOT NULL,
    UPDATED_AT      TIMESTAMP       NOT NULL,
    PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX UNIQUE_OPTION_GROUP_CATALOG_ID ON OPTION_GROUP (CATALOG_ID) WHERE STATUS = 'ACTIVE';
CREATE INDEX INDEX_OPTION_GROUP_CATALOG_ID_STATUS ON OPTION_GROUP (CATALOG_ID, STATUS);
CREATE INDEX INDEX_OPTION_GROUP_EXTERNAL_ID ON OPTION_GROUP (EXTERNAL_ID);



CREATE TABLE OPTION_GROUP_PRODUCT(
    ID                  BIGSERIAL,
    EXTERNAL_ID         VARCHAR(26) NOT NULL,
    PRODUCT_ID          BIGINT      NOT NULL,
    OPTION_GROUP_ID     BIGINT      NOT NULL,
    STATUS              VARCHAR(50) NOT NULL,
    CREATED_AT          TIMESTAMP   NOT NULL,
    UPDATED_AT          TIMESTAMP   NOT NULL,
    PRIMARY KEY (ID),
    CONSTRAINT UNIQUE_OPTION_GROUP_PRODUCT_EXTERNAL_ID UNIQUE (EXTERNAL_ID),
    CONSTRAINT UNIQUE_OPTION_GROUP_PRODUCT UNIQUE (PRODUCT_ID, OPTION_GROUP_ID),
    CONSTRAINT FK_OPTION_GROUP_PRODUCT_PRODUCT_ID FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (ID),
    CONSTRAINT FK_OPTION_GROUP_PRODUCT_OPTION_GROUP_ID FOREIGN KEY (OPTION_GROUP_ID) REFERENCES OPTION_GROUP (ID)
);
CREATE INDEX INDEX_OPTION_GROUP_PRODUCT_PRODUCT_ID ON OPTION_GROUP_PRODUCT (PRODUCT_ID);
CREATE INDEX INDEX_OPTION_GROUP_PRODUCT_EXTERNAL_ID ON OPTION_GROUP_PRODUCT (EXTERNAL_ID);



CREATE TABLE OPTION(
    ID                  BIGSERIAL,
    EXTERNAL_ID         VARCHAR(26)     NOT NULL,
    OPTION_GROUP_ID     BIGINT          NOT NULL,
    SEQUENCE            INT             NOT NULL,
    NAME                VARCHAR(30)     NOT NULL,
    PRICE               NUMERIC         NOT NULL,
    SERVING             VARCHAR(14)     NOT NULL,
    IMAGE_PATH          VARCHAR(300)    NOT NULL,
    STATUS              VARCHAR(50)     NOT NULL,
    CREATED_AT          TIMESTAMP       NOT NULL,
    UPDATED_AT          TIMESTAMP       NOT NULL,
    PRIMARY KEY (ID),
    CONSTRAINT FK_OPTION_OPTION_GROUP_ID FOREIGN KEY (OPTION_GROUP_ID) REFERENCES OPTION_GROUP (ID)
);
CREATE INDEX INDEX_OPTION_EXTERNAL_ID ON OPTION (EXTERNAL_ID);
CREATE INDEX INDEX_OPTION_CATEGORY_ID_STATUS ON OPTION (OPTION_GROUP_ID, STATUS);
CREATE UNIQUE INDEX UNIQUE_OPTION_OPTION_GROUP_ID ON OPTION (NAME, OPTION_GROUP_ID) WHERE STATUS = 'ACTIVE';
